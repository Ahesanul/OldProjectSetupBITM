@model StockManageWeb.Models.PurchaseVM
@{
    ViewBag.Title = "Add";
}

<h2>@ViewBag.mess </h2>


@if (Model != null)
{

    <form method="post">
        <div class="card">
            <div class="card-body">
                <h2>Supplier</h2>
                <div class="card">
                    <div class="card-body">

                        <div class="form-group row">
                            @Html.LabelFor(c => c.SupplierID, null, new { @class = "control-label col-md-5" })
                            <div class="col-sm-7">
                                @Html.DropDownListFor(c => c.SupplierID, Model.SupplierList, "--Select--", new { @class = "form-control", id = "customer" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(c => c.Date, null, new { @class = "control-label col-md-5" })
                            <div class="col-sm-7">
                                <input type="date" class="form-control" id="DateText" name="Date" placeholder="Quantity">
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(c => c.invoiceNo, null, new { @class = "control-label col-md-5" })
                            <div class="col-sm-7">
                                <input type="text" class="form-control" id="invoiceNoText" name="invoiceNo" placeholder="Bill/Invoice No">
                            </div>
                        </div>

                    </div>
                </div>



                <h2>Product</h2>
                <input type="button" data-target="#Order" data-toggle="modal" class="btn btn-success" value="Chack Remarks" id="remarkText">
                <div class="card">
                    <div class="card-body">

                        <div class="form-group row">

                            @Html.LabelFor(c => c.ProductID, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                @Html.DropDownListFor(c => c.ProductID, Model.ProductList, "--Select--", new { @class = "form-control", id = "product" })
                            </div>
                        </div>

                        <div class="form-group row">

                            <label class="control-label col-md-5">Code</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="CodeText" name="quantity" readonly>
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.manufactureDate, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="Date" class="form-control" id="MuantityText" name="quantity" placeholder="Manufacture Date">
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.expireDate, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="Date" class="form-control" id="expireDateText" name="quantity" placeholder="Bill/Invoice No">
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.remarks, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="remarksText" name="quantity" placeholder="Remarks">
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.quantity, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="QuantityText" name="quantity" placeholder="Quantity">
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.unitPrice, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="UnitPriceText" name="quantity" placeholder="Unit Price">
                            </div>
                        </div>

                        <div class="form-group row">

                            <label class="control-label col-md-5">Total Price</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="TotalPriceText" name="quantity" placeholder="Total Price" readonly>
                            </div>
                        </div>

                        <div class="form-group row">

                            <label class="control-label col-md-5">Previous Cost Price</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="PreviousCostPriceText" name="quantity" placeholder="Previous Cost Price" readonly>
                            </div>
                        </div>

                        <div class="form-group row">

                            <label class="control-label col-md-5">Previous MRP</label>
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="PreviousMRPText" name="quantity" placeholder="Previous MRP" readonly>
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(c => c.newMRP, null, new { @class = "control-label col-md-5" })
                            <div class="col-md-7">
                                <input type="text" class="form-control" id="NEwMRPText" name="quantity" placeholder="New MRP">
                            </div>
                        </div>

                        <div class="form-group row">

                            <label class="control-label col-md-5"></label>
                            <div class="col-md-7">
                                <input type="button" value="Add" class="form-control" id="btnAdd">
                            </div>
                        </div>

                    </div>

                </div>




            </div>
        </div>

        <div class="col-lg-auto">

            <h2>Product Details</h2>
            <div class="card">


                <div class="card-body">


                    <table class="table table-striped table-avatar" id="">
                        <thead>
                            <tr>
                                <th scope="col">Sl</th>
                                <th scope="col">Product(Code)</th>
                                <th scope="col">Manufacture Date</th>
                                <th scope="col">Expire Date</th>
                                <th scope="col">Quantity</th>
                                <th scope="col">Unit Price</th>
                                <th scope="col">Total Price</th>
                                <th scope="col">New Price</th>
                                <th scope="col">Remarks</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody id="tbl"></tbody>
                    </table>


                    <br /><br />


                    <div class="form-group row">
                        @*<label class="control-label col-sm-2" for="Address">Address:</label>*@
                        @*<label class="control-label col-md-4">Layality point</label>*@
                        @Html.Label("btnSave", " ", new { @class = "control-label col-md-5" })
                        <div class="col-sm-7">
                            @*<input type="text" class="form-control" id="Address" name="Address" placeholder="Address">*@
                            @*@Html.TextBoxFor(c => c.DistrictID, null, new { @class = "form-control"})*@
                            <input class="btn btn-success" type="submit" value="Save" />
                        </div>
                    </div>




                </div>

            </div>

        </div>

    </form>

}



<div class="modal" id="Order" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title">Order Remaks</h4>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">

                <div class="card">
                    <div class="card-body">

                        <table class="table table-striped row" style="margin-left:2%">

                            <tr>
                                <th>Sl</th>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Discription</th>


                            </tr>

                            @{int sl = 1; }
                            @foreach (var i in Model.orderRemarks)
                            {
                                <tr>

                                    <td>@(sl++ )</td>
                                    <td>@i.Purchase.product.Name</td>
                                    <td>@i.Date</td>
                                    <td>@i.Discription</td>


                                </tr>
                            }


                        </table>

                    </div>
                </div>

            </div>

            <div class="modal-footer">


            </div>


        </div>
    </div>

</div>

@section Scripts
{
    <script>


        $('#product').change(function ()
        {
            var ProductID = $('#product').val();
            var jsonData = { productID: ProductID };

            $.ajax(
                {
                    url: "/purchase/GetbyID2",
                    type: "POST",
                    data: jsonData,
                    success: function (aProduct) {

                        $("#CodeText").val(aProduct.aProduct_ReorderLevel);
                        $("#PreviousCostPriceText").val(aProduct.aProduct_unitPrice);
                        $("#PreviousMRPText").val(aProduct.aProduct_totalPrice);

                        //$("#CodeText").val("ReorderLevel...");
                        //$("#PreviousCostPriceText").val("unitPrice....");
                        //$("#PreviousMRPText").val("aProduct...");

                    },
                    error: function (response) {
                        alert(response);
                    }

                }
            );
        });


        $("#UnitPriceText").focusout(
            function () {
                var quantity = $('#QuantityText').val();
                var UnitPrice = $("#UnitPriceText").val();
                var totalmrp = quantity * UnitPrice;
                $("#TotalPriceText").val(totalmrp);
            }
        );
        var sl = 0;
        $("#btnAdd").click(
            function () {

                var Purchase = getStudentRecord();
                var row = getRowForStudent(Purchase);
                $("#tbl").append(row);
                sl++;
                if ($("#invoiceNoText").val() == null) {
                    alert("Inset value");
                }
                alert("done");

            }
        );

        function getStudentRecord() {
            var productId = $("#product option:selected").val();
            var productName = $("#product option:selected").text();
            var Code = $("#CodeText").val();
            var Munufacture = $("#MuantityText").val();
            var Expire = $("#expireDateText").val();
            var Remarks = $("#remarksText").val();
            var Quantity = $("#QuantityText").val();
            var Unit = $("#UnitPriceText").val();
            var Total = $("#TotalPriceText").val();
            var PreviousCost = $("#PreviousCostPriceText").val();
            var PreviousMRP = $("#PreviousMRPText").val();

            var NewMRP = $("#NEwMRPText").val();


            return {
                ProductID: productId, ProductName: productName, Code: Code, Munufacture: Munufacture, Expire: Expire, Remarks: Remarks, Quantity: Quantity, Unit: Unit, Total: Total, PreviousCost: PreviousCost, PreviousMRP: PreviousMRP, NewMRP: NewMRP
            }

        }

        function getRowForStudent(Purchase) {

            var productHidden = "<input type='hidden' name='purchases[" + sl + "].ProductID' value=" + Purchase.ProductID + " />";
            var CodeHidden = "<input type='hidden' name='purchases[" + sl + "].Code' value=" + Purchase.Code + " />";
            var MunufactureHidden = "<input type='hidden' name='purchases[" + sl + "].manufactureDate' value=" + Purchase.Munufacture + " />";
            var ExpireHidden = "<input type='hidden' name='purchases[" + sl + "].expireDate' value=" + Purchase.Expire + " />";
            var RemarksHidden = "<input type='hidden' name='purchases[" + sl + "].remarks' value=" + Purchase.Remarks + " />";
            var QuantityHidden = "<input type='hidden' name='purchases[" + sl + "].quantity' value=" + Purchase.Quantity + " />";
            var UnitHidden = "<input type='hidden' name='purchases[" + sl + "].unitPrice' value=" + Purchase.Unit + " />";
            var TotalHidden = "<input type='hidden' name='purchases[" + sl + "].totalPrice' value=" + Purchase.Total + " />";
            var NewMRPHidden = "<input type='hidden' name='purchases[" + sl + "].newMRP' value=" + Purchase.NewMRP + " />";
            var action = " <input type='button' value='Delete'/>";

            var tr = "<tr>";
            var SLCell = "<td>" + (sl+1) + "</td>";

            var ProductCell = "<td>" + productHidden + Purchase.ProductName + + "</td>";
            var CodeCell = "<td>" + CodeHidden + Purchase.Code + "</td>";
            var MunufactureCell = "<td>" + MunufactureHidden + Purchase.Munufacture + "</td>";
            var ExpireCell = "<td>" + ExpireHidden + Purchase.Expire + "</td>";
            var RemarksCell = "<td>" + RemarksHidden + Purchase.Remarks + "</td>";
            var QuantityCell = "<td>" + QuantityHidden + Purchase.Quantity + "</td>";
            var UnitCell = "<td>" + UnitHidden + Purchase.Unit + "</td>";
            var TotalCell = "<td>" + TotalHidden + Purchase.Total + "</td>";
            var NewMRPCell = "<td>" + NewMRPHidden + Purchase.NewMRP + "</td>";

            var btnPCell = "<td> " + action + " </td>";
            var endTr = "</tr>";
            var row = tr + SLCell + ProductCell + CodeCell + MunufactureCell + ExpireCell + RemarksCell + QuantityCell + UnitCell + TotalCell + NewMRPCell + btnPCell + endTr;

            return row;
        }








    </script>
    @*<script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@

}
